<project name="Automated Eclipse Testing" default="all" basedir=".">
    
    <!--properties file containing the plugin directory name including version number-->
    <property file="test.properties"/>
    
    <!--properties file containing the build information-->
    <property file="label.properties"/>
    
    <!--default directory where test-eclipse will be installed-->
    <property name="install" value="${basedir}/test-eclipse"/>
    
    <!--name that can be added to report name to identify which platform tests results come from-->
    <property name="platform" value=""/>
    
    <!-- The root of the eclipse installation -->
    <property name="eclipse-home" value="${install}/eclipse"/>
    
    <!-- The path to libary.xml -->
    <!--property name="library-file" value="${eclipse-home}/plugins/${org.eclipse.test}/library.xml" /-->
    
    <!-- The directory that will contain the xml and html results from the tests that are run -->
    <property name="results" value="${basedir}/results"/>
    
    <target name="setup" if="clean"
        description="Reinstall the test Eclipse installation if specified by user">
        <delete dir="${install}"/>
        <mkdir dir="${install}"/>
        <exec dir="." executable="unzip">
            <arg line="-o -qq eclipse-SDK-*.zip -d ${install}"/>
        </exec>
        
        <exec dir="." executable="unzip">
            <arg line="-o -qq eclipse-junit-tests-*.zip -d ${install}"/>
        </exec>
    </target>
    
    <target name="runtests" depends="setup"
        description="Runs ant on the test.xml for a specified plugin.  Requires a property value setting for testPlugin only if test.properties is not available.  The property testPlugin represents a directory name made up of the plugin id and plugin version.  This directory must contain a valid test.xml.">

        <echo message="Unpack ${eclipse-home}/plugins/${testPlugin}.jar to ${eclipse-home}/plugins/${testPlugin} ... "/>
        <move file="${eclipse-home}/plugins/${testPlugin}.jar" tofile="${eclipse-home}/plugins/${testPlugin}_.jar"/>
        <unjar src="${eclipse-home}/plugins/${testPlugin}_.jar" dest="${eclipse-home}/plugins/${testPlugin}"/>
        <delete file="${eclipse-home}/plugins/${testPlugin}_.jar"/> 
        
        <ant antfile="${eclipse-home}/plugins/${testPlugin}/test.xml" dir="${eclipse-home}">
            <property name="plugin-name" value="${testPlugin}" />
        </ant>
        <copy file="${eclipse-home}/${report}.xml" tofile="${results}/xml/${report}_${platform}.xml"
            failonerror="false"/>
        <antcall target="genHtml"/>
    </target>
     
    <target name="genHtml" description="Generates HTML results with provided JUNIT.XSL provided">
        <style style="JUNIT.XSL" basedir="${results}/xml" destdir="${results}/html"/>
    </target>
    
    
</project>
